name: 'CI/CD'

on:
  push:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform Workflow
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ vars.PROJECT_ID }}
      REGION: ${{ vars.REGION }}
      ARTIFACT_REPO: ${{ vars.ARTIFACT_REPO }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}
      CLOUD_RUN_JOB_NAME: ${{ vars.CLOUD_RUN_JOB_NAME }}
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}
      REPOSITORY_ID: ${{ vars.REPOSITORY_ID }}
      ZONE: ${{ vars.ZONE }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (Terraform)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.SA_TERRAFORM_KEY }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform -chdir=terraform init

      - name: Terraform Validate
        run: terraform -chdir=terraform validate

      - name: Terraform Plan (debug)
        timeout-minutes: 5
        env:
          TF_LOG: DEBUG
        run: |
          terraform -chdir=terraform plan \
            -var="project_id=$PROJECT_ID" \
            -var="repository_id=$REPOSITORY_ID" \
            -var="region=$REGION" \
            -var="zone=$ZONE" \
            -var="environment=$ENVIRONMENT"

      - name: Terraform Apply (main or develop)
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          terraform -chdir=terraform apply -auto-approve \
            -var="project_id=$PROJECT_ID" \
            -var="repository_id=$REPOSITORY_ID" \
            -var="region=$REGION" \
            -var="zone=$ZONE" \
            -var="environment=$ENVIRONMENT"

  build_and_deploy:
    name: Build, Publish & Deploy
    needs: terraform
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ vars.PROJECT_ID }}
      REGION: ${{ vars.REGION }}
      ARTIFACT_REPO: ${{ vars.ARTIFACT_REPO }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}
      CLOUD_RUN_JOB_NAME: ${{ vars.CLOUD_RUN_JOB_NAME }}
      ENVIRONMENT: ${{ vars.ENVIRONMENT }}
      REPOSITORY_ID: ${{ vars.REPOSITORY_ID }}
      ZONE: ${{ vars.ZONE }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud (Build/Deploy)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.SA_DEPLOYMENT_KEY }}'

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${REGION}-docker.pkg.dev

      - name: Ensure Artifact Registry exists
        run: |
          gcloud artifacts repositories describe ${ARTIFACT_REPO} \
            --location=${REGION} \
            --project=${PROJECT_ID} \
          || gcloud artifacts repositories create ${ARTIFACT_REPO} \
            --repository-format=docker \
            --location=${REGION} \
            --project=${PROJECT_ID} \
            --description="Docker repo for latam data challenge"

      - name: Build Docker image
        run: |
          docker build -t ${REGION}-docker.pkg.dev/${PROJECT_ID}/${ARTIFACT_REPO}/${IMAGE_NAME}:latest .

      - name: Push image to Artifact Registry
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          docker push ${REGION}-docker.pkg.dev/${PROJECT_ID}/${ARTIFACT_REPO}/${IMAGE_NAME}:latest

      - name: Deploy to Cloud Run Job
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          gcloud run jobs deploy $CLOUD_RUN_JOB_NAME \
            --image=${REGION}-docker.pkg.dev/${PROJECT_ID}/${ARTIFACT_REPO}/${IMAGE_NAME}:latest \
            --project=${PROJECT_ID} \
            --region=${REGION} \
            --service-account=sa-deployment@${PROJECT_ID}.iam.gserviceaccount.com \
            --command="python" \
            --args="src/main.py,--question,all,--method,time,--top_n,10,--save_bq" \
            --set-env-vars="PYTHONPATH=/app" \
            --cpu=2 \
            --memory=4Gi \
            --max-retries=1 \
            --task-timeout=3600s \
            --labels="environment=${ENVIRONMENT},repository_id=${REPOSITORY_ID}" \
            --execution-environment=gen2 \
            --no-async

      - name: Run Cloud Run Job
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          gcloud run jobs execute $CLOUD_RUN_JOB_NAME \
            --project=${PROJECT_ID} \
            --region=${REGION} \
            --wait
